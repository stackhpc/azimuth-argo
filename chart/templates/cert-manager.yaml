{{- define "azimuth-argo.cert-manager.defaultValues" -}}
installCRDs: true
{{- end }}

{{- define "azimuth-argo.cert-manager.source" -}}
repoURL: {{ .Values.certManager.chart.repo }}
chart: {{ .Values.certManager.chart.name }}
targetRevision: {{ .Values.certManager.chart.version }}
helm:
  releaseName: {{ .Values.certManager.release.name }}
  values: |
    {{-
      include "azimuth-argo.cert-manager.defaultValues" . |
        fromYaml |
        mustMerge .Values.certManager.release.values |
        toYaml |
        nindent 4
    }}
{{- end }}

{{- define "azimuth-argo.cert-manager.issuerSource" -}}
repoURL: {{ .Values.rawChart.repo }}
chart: {{ .Values.rawChart.name }}
targetRevision: {{ .Values.rawChart.version }}
helm:
  releaseName: {{ .Values.certManager.release.name }}-issuer
  values: |
    resources:
      - apiVersion: cert-manager.io/v1
        kind: ClusterIssuer
        metadata:
          name: {{ .Values.certManager.acmeHttp01Issuer.name }}
        spec:
          acme:
            server: {{ .Values.certManager.acmeHttp01Issuer.server }}
            privateKeySecretRef:
              name: {{ .Values.certManager.acmeHttp01Issuer.name }}-privkey
            solvers:
              - http01:
                  ingress:
                    class: {{ .Values.certManager.acmeHttp01Issuer.ingressClass }}
{{- end }}

{{- if .Values.certManager.enabled }}
---
{{
  include
    "azimuth-argo.application"
    (list
      .
      "cert-manager"
      .Values.certManager.release.namespace
      "azimuth-argo.cert-manager.source"
    )
}}
{{- if .Values.certManager.acmeHttp01Issuer.enabled }}
---
{{
  include
    "azimuth-argo.application"
    (list
      .
      "acme-http01-issuer"
      .Values.certManager.release.namespace
      "azimuth-argo.cert-manager.issuerSource"
    )
}}
{{- end }}
{{- end }}
